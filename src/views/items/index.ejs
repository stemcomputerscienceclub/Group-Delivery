<div class="container mt-4 mb-5">
    <!-- Create Order Button -->
    <div class="d-flex justify-content-between align-items-start mb-4">
        <h4>Group Orders</h4>
        <a href="/items/new" class="btn btn-primary">
            <i class="bi bi-plus-circle"></i> Create Group Order
        </a>
    </div>

    <!-- Order Statistics -->
    <% if (statistics) { %>
        <div class="row g-4 mb-4">
            <!-- Total Orders -->
            <div class="col-md-4">
                <div class="card shadow-sm h-100">
                    <div class="card-body">
                        <h6 class="card-subtitle mb-2 text-body-secondary">Total Orders</h6>
                        <h2 class="card-title mb-0"><%= statistics.totalOrders %></h2>
                    </div>
                </div>
            </div>

            <!-- Total Spent -->
            <div class="col-md-4">
                <div class="card shadow-sm h-100">
                    <div class="card-body">
                        <h6 class="card-subtitle mb-2 text-body-secondary">Total Spent</h6>
                        <h2 class="card-title mb-0">$<%= statistics.totalSpent.toFixed(2) %></h2>
                    </div>
                </div>
            </div>

            <!-- Payment Status -->
            <div class="col-md-4">
                <div class="card shadow-sm h-100">
                    <div class="card-body">
                        <h6 class="card-subtitle mb-2 text-body-secondary">Pending Payments</h6>
                        <h2 class="card-title mb-0">
                            <%= paymentHistory.filter(p => p.status === 'unpaid').length %>
                        </h2>
                    </div>
                </div>
            </div>
        </div>

        <!-- Detailed Statistics -->
        <div class="row g-4 mb-4">
            <!-- Favorite Restaurants -->
            <div class="col-md-6">
                <div class="card shadow-sm h-100">
                    <div class="card-header">
                        <h6 class="mb-0">Favorite Restaurants</h6>
                    </div>
                    <div class="card-body p-0">
                        <div class="list-group list-group-flush">
                            <% if (statistics.favoriteRestaurants && statistics.favoriteRestaurants.length > 0) { %>
                                <% statistics.favoriteRestaurants.forEach(restaurant => { %>
                                    <div class="list-group-item">
                                        <div class="d-flex justify-content-between align-items-start">
                                            <div>
                                                <h6 class="mb-1"><%= restaurant.name %></h6>
                                                <small class="text-body-secondary">
                                                    <%= restaurant.orderCount %> orders
                                                </small>
                                            </div>
                                            <span class="text-body-secondary">
                                                $<%= restaurant.totalSpent.toFixed(2) %>
                                            </span>
                                        </div>
                                    </div>
                                <% }); %>
                            <% } else { %>
                                <div class="list-group-item text-center text-body-secondary py-3">
                                    No favorite restaurants yet
                                </div>
                            <% } %>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Most Ordered Items -->
            <div class="col-md-6">
                <div class="card shadow-sm h-100">
                    <div class="card-header">
                        <h6 class="mb-0">Most Ordered Items</h6>
                    </div>
                    <div class="card-body p-0">
                        <div class="list-group list-group-flush">
                            <% if (statistics.mostOrderedItems && statistics.mostOrderedItems.length > 0) { %>
                                <% statistics.mostOrderedItems.forEach(item => { %>
                                    <div class="list-group-item">
                                        <div class="d-flex justify-content-between align-items-start">
                                            <div>
                                                <h6 class="mb-1"><%= item.name %></h6>
                                                <small class="text-body-secondary">
                                                    Ordered <%= item.quantity %> times
                                                </small>
                                            </div>
                                            <span class="text-body-secondary">
                                                $<%= item.totalSpent.toFixed(2) %>
                                            </span>
                                        </div>
                                    </div>
                                <% }); %>
                            <% } else { %>
                                <div class="list-group-item text-center text-body-secondary py-3">
                                    No ordered items yet
                                </div>
                            <% } %>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    <% } %>

    <!-- Active Orders -->
    <div class="card shadow-sm mb-4">
        <div class="card-header">
            <h5 class="mb-0">Active Orders</h5>
        </div>
        <div class="card-body p-0">
            <div class="list-group list-group-flush">
                <% const activeOrders = items.filter(item => item.status === 'open'); %>
                <% if (activeOrders.length > 0) { %>
                    <% activeOrders.forEach(item => { %>
                        <a href="/items/<%= item._id %>" class="list-group-item list-group-item-action">
                            <div class="d-flex justify-content-between align-items-start">
                                <div>
                                    <h6 class="mb-1">
                                        <%= item.restaurant ? item.restaurant.name : 'Restaurant Unavailable' %>
                                    </h6>
                                    <div class="text-body-secondary small">
                                        Created by <%= item.createdBy ? item.createdBy.name : 'Unknown' %> • Room <%= item.creatorRoom %>
                                    </div>
                                    <div class="text-body-secondary small">
                                        Delivery at <%= new Date(item.deliveryTime).toLocaleString() %>
                                    </div>
                                    <% if (item.message) { %>
                                        <div class="text-body-secondary small">
                                            <i class="bi bi-chat-text"></i> <%= item.message %>
                                        </div>
                                    <% } %>
                                </div>
                                <div class="text-end">
                                    <div class="badge bg-success mb-1">Open</div>
                                    <div class="text-body-secondary small">
                                        <%= item.individualOrders.length %> orders
                                    </div>
                                </div>
                            </div>
                        </a>
                    <% }); %>
                <% } else { %>
                    <div class="list-group-item text-center text-body-secondary py-4">
                        <i class="bi bi-inbox display-4 d-block mb-2"></i>
                        No active orders
                    </div>
                <% } %>
            </div>
        </div>
    </div>

    <!-- Past Orders -->
    <div class="card shadow-sm">
        <div class="card-header d-flex justify-content-between align-items-center">
            <h5 class="mb-0">Past Orders</h5>
            <small class="text-body-secondary">Showing last 20 orders</small>
        </div>
        <div class="card-body p-0">
            <div class="list-group list-group-flush">
                <% const pastOrders = items.filter(item => item.status === 'closed' || item.status === 'delivered').slice(0, 20); %>
                <% if (pastOrders.length > 0) { %>
                    <% pastOrders.forEach(item => { %>
                        <a href="/items/<%= item._id %>" class="list-group-item list-group-item-action">
                            <div class="d-flex justify-content-between align-items-start">
                                <div>
                                    <h6 class="mb-1">
                                        <%= item.restaurant ? item.restaurant.name : 'Restaurant Unavailable' %>
                                    </h6>
                                    <div class="text-body-secondary small">
                                        Created by <%= item.createdBy ? item.createdBy.name : 'Unknown' %> • Room <%= item.creatorRoom %>
                                    </div>
                                    <div class="text-body-secondary small">
                                        <% if (item.status === 'delivered') { %>
                                            Delivered <%= new Date(item.deliveredAt).toLocaleString() %>
                                        <% } else { %>
                                            Closed <%= new Date(item.updatedAt).toLocaleString() %>
                                        <% } %>
                                    </div>
                                </div>
                                <div class="text-end">
                                    <div class="badge <%= item.status === 'delivered' ? 'bg-info' : 'bg-secondary' %> mb-1">
                                        <%= item.status.charAt(0).toUpperCase() + item.status.slice(1) %>
                                    </div>
                                    <div class="text-body-secondary small">
                                        <%= item.individualOrders.length %> orders
                                    </div>
                                </div>
                            </div>
                        </a>
                    <% }); %>
                    
                    <% if (items.filter(item => item.status === 'closed' || item.status === 'delivered').length > 20) { %>
                        <div class="list-group-item text-center py-3">
                            <button class="btn btn-outline-primary btn-sm" onclick="loadMorePastOrders()">
                                <i class="bi bi-arrow-down-circle me-1"></i>
                                Load More Past Orders
                            </button>
                            <small class="text-body-secondary d-block mt-1">
                                Showing 20 of <%= items.filter(item => item.status === 'closed' || item.status === 'delivered').length %> past orders
                            </small>
                        </div>
                    <% } %>
                <% } else { %>
                    <div class="list-group-item text-center text-body-secondary py-4">
                        <i class="bi bi-clock-history display-4 d-block mb-2"></i>
                        No past orders
                    </div>
                <% } %>
            </div>
        </div>
    </div>
</div>

<script>
    // Load more past orders functionality
    let currentPage = 1;
    const ordersPerPage = 20;
    let allPastOrders = [];

    // Initialize past orders data
    document.addEventListener('DOMContentLoaded', function() {
        // Get all past orders from the current page data
        const pastOrdersElements = document.querySelectorAll('.list-group-item-action');
        allPastOrders = Array.from(pastOrdersElements).filter(element => {
            const badge = element.querySelector('.badge');
            return badge && (badge.textContent.includes('Delivered') || badge.textContent.includes('Closed'));
        });
    });

    async function loadMorePastOrders() {
        const loadMoreBtn = document.querySelector('button[onclick="loadMorePastOrders()"]');
        const loadMoreContainer = loadMoreBtn?.parentElement;
        
        if (!loadMoreBtn || !loadMoreContainer) {
            console.error('Load more button not found');
            return;
        }

        try {
            // Show loading state
            loadMoreBtn.innerHTML = '<i class="bi bi-arrow-clockwise spin me-1"></i>Loading...';
            loadMoreBtn.disabled = true;

            // Calculate next page
            currentPage++;
            const skip = (currentPage - 1) * ordersPerPage;

            // Fetch more orders from server
            const response = await fetch(`/items/past-orders?page=${currentPage}&limit=${ordersPerPage}&skip=${skip}`, {
                method: 'GET',
                headers: {
                    'Content-Type': 'application/json'
                }
            });

            if (!response.ok) {
                throw new Error('Failed to load more orders');
            }

            const data = await response.json();
            
            if (data.orders && data.orders.length > 0) {
                // Insert new orders before the load more button
                const pastOrdersContainer = document.querySelector('.list-group-flush');
                const loadMoreItem = loadMoreContainer.parentElement;
                
                data.orders.forEach(order => {
                    const orderElement = createOrderElement(order);
                    pastOrdersContainer.insertBefore(orderElement, loadMoreItem);
                });

                // Update the "showing X of Y" text
                const showingText = loadMoreContainer.querySelector('small');
                if (showingText) {
                    const currentCount = document.querySelectorAll('.list-group-item-action').length;
                    showingText.textContent = `Showing ${currentCount} of ${data.totalCount} past orders`;
                }

                // If no more orders, remove the load more button
                if (data.orders.length < ordersPerPage) {
                    loadMoreContainer.remove();
                }
            } else {
                // No more orders to load
                loadMoreContainer.remove();
            }

        } catch (error) {
            console.error('Error loading more orders:', error);
            
            // Reset button state
            loadMoreBtn.innerHTML = '<i class="bi bi-arrow-down-circle me-1"></i>Load More Past Orders';
            loadMoreBtn.disabled = false;
            
            // Show error message
            alert('Failed to load more orders. Please try again.');
        }
    }

    function createOrderElement(order) {
        const orderDiv = document.createElement('a');
        orderDiv.href = `/items/${order._id}`;
        orderDiv.className = 'list-group-item list-group-item-action';
        
        const status = order.status === 'delivered' ? 'Delivered' : 'Closed';
        const statusClass = order.status === 'delivered' ? 'bg-info' : 'bg-secondary';
        const date = order.status === 'delivered' ? 
            new Date(order.deliveredAt).toLocaleString() : 
            new Date(order.updatedAt).toLocaleString();

        orderDiv.innerHTML = `
            <div class="d-flex justify-content-between align-items-start">
                <div>
                    <h6 class="mb-1">${order.restaurant ? order.restaurant.name : 'Restaurant Unavailable'}</h6>
                    <div class="text-body-secondary small">
                        Created by ${order.createdBy ? order.createdBy.name : 'Unknown'} • Room ${order.creatorRoom}
                    </div>
                    <div class="text-body-secondary small">
                        ${status} ${date}
                    </div>
                </div>
                <div class="text-end">
                    <div class="badge ${statusClass} mb-1">${status}</div>
                    <div class="text-body-secondary small">${order.individualOrders.length} orders</div>
                </div>
            </div>
        `;
        
        return orderDiv;
    }

    // Add CSS for loading spinner
    const style = document.createElement('style');
    style.textContent = `
        .spin {
            animation: spin 1s linear infinite;
        }
        @keyframes spin {
            from { transform: rotate(0deg); }
            to { transform: rotate(360deg); }
        }
    `;
    document.head.appendChild(style);
</script>